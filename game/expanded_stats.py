from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from game.units import Soldier

try:
    _fromUtf8 = lambda s: s
except AttributeError:
    def _fromUtf8(s):
        return s

class ExpandedSkillsTable(QWidget):
    '''
    Table with unit stats in unit expanded view
    '''
    def __init__(self, parent=None):
        super(QWidget, self).__init__(parent)
        self.verticalLayoutWidget = QWidget()
        self.verticalLayoutWidget.setGeometry(QRect(80, 50, 160, 341))
        self.verticalLayoutWidget.setObjectName(_fromUtf8("verticalLayoutWidget"))
        self.verticalLayout = QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.tableWidget = QTableWidget(self.verticalLayoutWidget)
        self.tableWidget.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.tableWidget.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.tableWidget.setAutoScroll(False)
        self.tableWidget.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.tableWidget.setHorizontalScrollMode(QAbstractItemView.ScrollPerItem)
        self.tableWidget.setShowGrid(True)
        self.tableWidget.setGridStyle(Qt.SolidLine)
        self.tableWidget.setWordWrap(False)
        self.tableWidget.setCornerButtonEnabled(False)
        self.tableWidget.setRowCount(11)
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setObjectName(_fromUtf8("tableWidget"))
        item = QTableWidgetItem()
        font = QFont()
        font.setBold(False)
        font.setWeight(50)
        item.setFont(font)
        self.tableWidget.setItem(0, 0, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(0, 1, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(1, 0, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(1, 1, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(2, 0, item)
        item = QTableWidgetItem()
        item.setTextAlignment(Qt.AlignLeft|Qt.AlignVCenter)
        self.tableWidget.setItem(2, 1, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(3, 0, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(3, 1, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(4, 0, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(4, 1, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(5, 0, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(5, 1, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(6, 0, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(6, 1, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(7, 0, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(7, 1, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(8, 0, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(8, 1, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(9, 0, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(9, 1, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(10, 0, item)
        item = QTableWidgetItem()
        self.tableWidget.setItem(10, 1, item)
        self.tableWidget.horizontalHeader().setVisible(False)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(68)
        self.tableWidget.horizontalHeader().setHighlightSections(False)
        self.tableWidget.horizontalHeader().setMinimumSectionSize(65)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.verticalHeader().setDefaultSectionSize(35)
        self.tableWidget.verticalHeader().setHighlightSections(False)
        self.tableWidget.verticalHeader().setMinimumSectionSize(35)
        self.tableWidget.verticalHeader().setStretchLastSection(False)
        self.verticalLayout.addWidget(self.tableWidget)
        self.setLayout(self.verticalLayout)

    def retranslate_widget(self, unit):
        '''
        Fill table  with unit stats
        '''
        font = QFont()
        font.setBold(True)
        font.setWeight(75)
        item = self.tableWidget.item(0, 0)
        item.setText("Name")
        item.setFont(font)
        item = self.tableWidget.item(0, 1)
        item.setText("%s" % unit.name)
        item.setFont(font)
        item = self.tableWidget.item(1, 0)
        item.setText("Move")
        item = self.tableWidget.item(1, 1)
        item.setText("%s" % unit.move)
        item = self.tableWidget.item(2, 0)
        item.setText("Fight")
        item = self.tableWidget.item(2, 1)
        item.setText("%s" % unit.fight)
        item = self.tableWidget.item(3, 0)
        item.setText("Shoot")
        item = self.tableWidget.item(3, 1)
        item.setText("%s" % unit.shoot)
        item = self.tableWidget.item(4, 0)
        item.setText("Armour")
        item = self.tableWidget.item(4, 1)
        item.setText("%s" % unit.armour)
        item = self.tableWidget.item(5, 0)
        item.setText("Health")
        item = self.tableWidget.item(5, 1)
        item.setText("%s" % unit.health)
        item = self.tableWidget.item(6, 0)
        item.setText("Morale")
        item = self.tableWidget.item(6, 1)
        item.setText("%s" % unit.morale)
        if not isinstance(unit, Soldier):
            item = self.tableWidget.item(7, 0)
            item.setText("Experience")
            item = self.tableWidget.item(7, 1)
            item.setText("%s" % unit.experience)
            item = self.tableWidget.item(8, 0)
            item.setText("Specialism")
            item = self.tableWidget.item(8, 1)
            item.setText("%s" % unit.specialism)
            item = self.tableWidget.item(9, 0)
            item.setText("Skillset")
            item = self.tableWidget.item(9, 1)
            item.setText("%s" % unit.skillset)
        item = self.tableWidget.item(10, 0)
        item.setText("Cost")
        item = self.tableWidget.item(10, 1)
        item.setText("%s" % unit.cost)
